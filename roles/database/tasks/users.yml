---

- name: "{{ informix_server_name }} : Check Informix configuration is present"
  assert:
    that:
      - informix_server_name in informix_service_config.keys()
    msg: "Informix configuration for Tuxedo user '{{ informix_server_name }}' must be defined in 'informix_service_config'"

- name: "{{ informix_server_name }} : Check Informix root dbspace configuration is present"
  assert:
    that:
      - informix_service_config[informix_server_name].dbspaces.root is defined
      - informix_service_config[informix_server_name].dbspaces.root.initial_chunk is defined
    msg: "Informix root dbspace configuration for Tuxedo user {{ informix_server_name }} must include an 'initial_chunk' configuration in 'informix_service_config[{{ informix_server_name }}].dbspaces.root'"


- name: "{{ informix_server_name }} : Set variables for config population"
  set_fact:
    informix_server_name: "{{ informix_server_name }}"
    informix_server_id: "{{ informix_service_config[informix_server_name].server_id }}"
    informix_server_port: "{{ informix_service_config[informix_server_name].server_port }}"
    informix_root_dbspace_name: "root"
    informix_root_dbspace_path: "{{ informix_service_config[informix_server_name].dbspaces.root.initial_chunk.path }}"
    informix_root_dbspace_offset: "{{ informix_service_config[informix_server_name].dbspaces.root.initial_chunk.offset_in_kb }}"
    informix_root_dbspace_size: "{{ informix_service_config[informix_server_name].dbspaces.root.initial_chunk.size_in_kb }}"

- name: "{{ informix_server_name }} : Use default server connections for config population"
  set_fact:
    informix_connections:
      - server_name: "{{ informix_server_name }}"
        connection_type: onipcshm
        host: localhost
        service_or_port: localhost
      - server_name: "{{ informix_server_name }}tcp"
        connection_type: onsoctcp
        host: localhost4
        service_or_port: "{{ informix_server_port }}"
  when: informix_service_config[informix_server_name].server_connections is not defined

- name: "{{ informix_server_name }} : Use specified server connections for config population"
  set_fact:
    informix_connections: "{{ informix_service_config[informix_server_name].server_connections }}"
  when: informix_service_config[informix_server_name].server_connections is defined

- name: "{{ informix_server_name }} : Create Informix runtime configuration file"
  template:
    src: onconfig.j2
    dest: "{{ informix_install_path }}/etc/onconfig.{{ informix_server_name }}"
    owner: "{{ informix_service_user }}"
    group: "{{ informix_service_group }}"
    mode: '0744'
    trim_blocks: no
  vars:
    connections: "{{ informix_connections }}"

- name: "{{ informix_server_name }} : Create Informix client/server connectivity configuration file"
  template:
    src: sqlhosts.j2
    dest: "{{ informix_install_path }}/etc/sqlhosts.{{ informix_server_name }}"
    owner: "{{ informix_service_user }}"
    group: "{{ informix_service_group }}"
    mode: '0744'
  vars:
    connections: "{{ informix_connections }}"

- name: "{{ informix_server_name }} : Create chunk store directory"
  file:
    path: "{{ informix_chunk_store_path }}/{{ informix_server_name }}"
    owner: informix
    group: informix
    mode: 0755
    state: directory

- name: "{{ informix_server_name }} : Provision root dbspace"
  include_tasks: root_dbspace.yml
  loop: "{{ informix_service_config[informix_server_name].dbspaces | dict2items | rejectattr('key', 'ne', 'root') | list }}"
  loop_control:
    loop_var: dbspace

- name: "{{ informix_server_name }} : Provision additional dbspaces"
  include_tasks: dbspace.yml
  loop: "{{ informix_service_config[informix_server_name].dbspaces | dict2items | rejectattr('key', 'eq', 'root') | list }}"
  loop_control:
    loop_var: dbspace
